"""fix_id_types_to_uuid

Revision ID: cf8e8c6c6c2e
Revises: 7fb663aca1b6
Create Date: 2025-08-12 22:57:27.326435

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from fastapi_users_db_sqlalchemy.generics import GUID


# revision identifiers, used by Alembic.
revision: str = "cf8e8c6c6c2e"
down_revision: Union[str, Sequence[str], None] = "7fb663aca1b6"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # First, drop foreign key constraints to avoid conflicts
    op.drop_constraint(
        "extractions_document_id_fkey", "extractions", type_="foreignkey"
    )

    # Update existing data to ensure valid UUIDs
    op.execute(
        "UPDATE documents SET id = id::uuid WHERE id ~ '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'"
    )
    op.execute(
        "UPDATE extractions SET id = id::uuid WHERE id ~ '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'"
    )
    op.execute(
        "UPDATE extractions SET document_id = document_id::uuid WHERE document_id ~ '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'"
    )

    # Change column types
    op.alter_column(
        "documents",
        "id",
        existing_type=sa.VARCHAR(),
        type_=GUID(),
        existing_nullable=False,
        postgresql_using="id::uuid",
    )
    op.alter_column(
        "extractions",
        "id",
        existing_type=sa.VARCHAR(),
        type_=GUID(),
        existing_nullable=False,
        postgresql_using="id::uuid",
    )
    op.alter_column(
        "extractions",
        "document_id",
        existing_type=sa.VARCHAR(),
        type_=GUID(),
        existing_nullable=False,
        postgresql_using="document_id::uuid",
    )

    # Recreate foreign key constraint
    op.create_foreign_key(
        "extractions_document_id_fkey",
        "extractions",
        "documents",
        ["document_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###

    # Drop foreign key constraint
    op.drop_constraint(
        "extractions_document_id_fkey", "extractions", type_="foreignkey"
    )

    # Change column types back
    op.alter_column(
        "extractions",
        "document_id",
        existing_type=GUID(),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    op.alter_column(
        "extractions",
        "id",
        existing_type=GUID(),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )
    op.alter_column(
        "documents",
        "id",
        existing_type=GUID(),
        type_=sa.VARCHAR(),
        existing_nullable=False,
    )

    # Recreate foreign key constraint
    op.create_foreign_key(
        "extractions_document_id_fkey",
        "extractions",
        "documents",
        ["document_id"],
        ["id"],
        ondelete="CASCADE",
    )
    # ### end Alembic commands ###
